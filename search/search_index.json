{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Welcome to APKognito! Quickstart Learn More <ul> <li> Getting Started      A quick guide to get you up and running with APKognito.      Quickstart</li> <li> Configurations      Dive deep into the various configuration options to customize your builds.      Learn More</li> <li> Advanced Topics      Explore advanced configurations and fine-tune your APKs.      Explore</li> </ul> <ul> <li> Create a GitHub Issue      Create an issue or feature request on GitHub.      Visit</li> <li> Visit Discord      Get real-time support in a quick support channel, or create a forum post.      Join</li> </ul>"},{"location":"configurations/","title":"Configurations","text":"<p>APKognito offers both basic and advanced configurations. All basic configurations can be at the top of the Rename Settings page.</p> <p></p> <p>There a several basic options that come build into a dropdown card menu on the main package renamer page.</p>"},{"location":"configurations/#java-path","title":"Java Path","text":""},{"location":"configurations/#java-version","title":"Java Version","text":"<p>  Text box |  rename-settings.json  java_version</p> <p>Allows you to select which JDK or JRE version to use.</p>"},{"location":"configurations/#output-settings","title":"Output Settings","text":""},{"location":"configurations/#output-directory","title":"Output Directory","text":"<p> Path selector |  rename-settings.json  apk_output</p> <p>This is the directory that all renamed packages are placed into.</p> <p>The default path is <code>%APPDATA%\\APKognito\\output</code>.</p>"},{"location":"configurations/#new-package-name","title":"New Package Name","text":"<p> Text box |  rename-settings.json  apk_replacement_name</p> <p>This is the replacement company name of a package.</p> <p>Example</p> <p>apk_replacement_name = <code>apkognito</code></p> <p><code>com.sombody101.myapp</code> -&gt; <code>com.apkognito.myapp</code></p> <p>The default value for this is <code>apkognito</code>.</p>"},{"location":"configurations/#copy-app-files","title":"Copy App Files","text":"<p> Toggle |  rename-settings.json  copy_when_renaming</p> <p>This option is only useful if there isn't enough space on which ever drive <code>%TEMP%</code> is defined on (usually the C drive <code>%APPDATA%\\Temp\\</code>). Disabling this toggle will move/delete the source app files immediately after their use, but before the process is finished. This is to preserve drive space.</p> <p>Warning</p> <p>APKognito will not reverse the process if the renaming process fails while this is set to move files. You'll have to rebuild your project and get the original app again. A warning dialog will appear when this option is toggled.</p>"},{"location":"configurations/#push-after-rename","title":"Push After Rename","text":"<p> Toggle |  rename-settings.json  push_after_rename</p> <p>Each renamed package will be pushed to an ADB enabled device after being renamed. This toggle requires that platform tools is installed and a valid path is set in APKognito. You can also enter the command <code>:install-adb</code> in the Console Page to install and configure platform tools automatically.</p>"},{"location":"configurations/#open-advanced-options","title":"Open Advanced Options","text":"<p> Page</p> <p>To learn more about the Advanced Configurations APKognito has to offer, go to the Advanced configuration guide.</p>"},{"location":"creating_a_logpack/","title":"Creating a logpack","text":""},{"location":"creating_a_logpack/#what-is-a-logpack","title":"What is a logpack?","text":"<p>A logpack is a ZIP archive that contains information, logs, and certain configurations about your APKognito installation that can help with debugging.</p> <p>The items in a logpack include:</p> <ul> <li>App logs.</li> <li>Exception logs.</li> <li>Package Renaming history.</li> <li>All text found within the Package Renamer page log box.</li> <li>An empty file that's given the APKognito version as a name. (e.g., <code>v2.0.0.0</code>)</li> </ul> <p>Warning</p> <p>Please do not copy/paste text from any log boxes inside APKognito unless asked by an active maintainer of APKognito. All information found in those boxes can already be found in the logpack with the key difference being that your username is redacted.</p>"},{"location":"creating_a_logpack/#how-to-create-a-logpack","title":"How to create a logpack","text":"<p>To create a logpack, navigate to the settings menu at the bottom left of the APKognito window, then select the <code>Debugging</code> dropdown. Under it you should see a button that says <code>Create Logpack</code>.</p> <p></p> <p>All needed information will then be written to a ZIP archive. If it's created successfully, a dialog menu will appear asking if you'd like to open Explorer in the same directory as the logpack, then click <code>Open</code>. Otherwise, click <code>Close</code> and the dialog will disappear.</p> <p>Note</p> <p>If you were given this link after making a post, then you've already ignored several notices explaining a logpack is required.</p>"},{"location":"advanced/advanced_package_configurations/","title":"Advanced configuration","text":""},{"location":"advanced/advanced_package_configurations/#regex","title":"Regex","text":""},{"location":"advanced/advanced_package_configurations/#file-regex-pattern","title":"File regex pattern","text":"<p>  Text box |  adv-rename.json  package_replace_regex</p> <p>This is a regex used throughout the package renaming process. It's default value is <code>(?&lt;=[./_])({value})(?=[./_])</code>. The substring <code>{value}</code> is replaced with the original package company name one the renaming process starts. The button to the right of the text box is a reset button which will reset the regex string to its default value.</p> <p>Warning</p> <p>It's important that the substring <code>{value}</code> be present and that the regex is valid, or the renaming process will not work. If you're trying to edit the regex, use regex.101 or other tools to make sure it won't fail.</p>"},{"location":"advanced/advanced_package_configurations/#rename-options","title":"Rename options","text":""},{"location":"advanced/advanced_package_configurations/#rename-libraries","title":"Rename libraries","text":"<p> Toggle |  adv-rename.json  rename_libs</p> <p>This toggle determines if library binaries will be renamed (in the literal sense). Libraries are loaded at runtime based on their string name. So, sometimes renaming the name of the file is mandatory to make sure the linking process remains intact.</p>"},{"location":"advanced/advanced_package_configurations/#rename-libraries-internally","title":"Rename libraries internally","text":"<p> Toggle |  adv-rename.json  rename_libs_internal</p> <p>Besides renaming binary files, sometimes there are native implementations to methods defined in Smali (Java) code. There's no need to worry about the binaries becoming corrupt as their renaming process only affects the string table sections. All code and binary sections are left untouched.</p> <p>Example</p> <p>The format of these native link strings are:</p> <pre><code>Java_&lt;tld&gt;_&lt;classes ...&gt;_&lt;method&gt;\n</code></pre> <p>An example using realistic naming would be:</p> <pre><code>Java_com_sombody101_QuestionableInvoker_ActionContextLocator_LocateContext\n</code></pre>"},{"location":"advanced/advanced_package_configurations/#rename-obb-files-internally","title":"Rename OBB files internally","text":"<p> Toggle |  adv-rename.json  rename_obbs_internal</p> <p>There isn't an option for renaming OBB files because that's a standard part of the renaming process, but renaming them internally isn't.</p> <p>With this, the file entries in every found OBB file are searched through in memory. If an entry either has the word \"catalog\" inside it or is a direct match to an entry in the <code>Extra OBB Rename Paths</code> text box, then it's fully extracted into memory, renamed, then repacked into the OBB.</p>"},{"location":"advanced/advanced_package_configurations/#obb-renaming","title":"OBB renaming","text":""},{"location":"advanced/advanced_package_configurations/#extra-obb-rename-paths","title":"Extra OBB rename paths","text":"<p> Text box |  adv-rename.json  rename_obbs_internal_extras</p> <p>This box is disabled when the <code>Rename OBB Files Internally</code> toggle is disabled.</p> <p>Every line in this textbox will be used as an internal file path in each OBB file found. For example, the if the path <code>aa/Android/bin/tts/index.json</code> is found in an OBB file, that file will be extracted into memory, renamed, then repacked. No error or warning will be triggered if it's not found.</p> <p>Each item can be either comma or newline separated. They will be newline separated regardless of the method used the next time APKognito loads the saved values.</p>"},{"location":"advanced/advanced_package_configurations/#java-options","title":"Java options","text":""},{"location":"advanced/advanced_package_configurations/#java-flags","title":"Java flags","text":"<p> Text box |  adv-rename.json  java_flags</p> <p>Additional flags to be injected into the Java process.</p> <p>The default value for this option is <code>--enable-native-access=ALL-UNNAMED</code> and allows apps to call methods which are implemented in native code. This option was only required due to security changes made by Oracle and is requried in order to use Uber APK Signer.</p> <p>If a rename fails and the output logs say:</p> <pre>\n<code>Unrecognized option: --enable-native-access=ALL-UNNAMED\nError: Could not create the Java Virtual Machine\nError: A fatal exception has occurred. Program will exit.\n</code></pre> <p>Simply clear the Java flags textbox, save your changes, and re-run the renaming process. This error is caused when using an older JDK or JRE version that was made prior to the indroduction of this flag.</p> <p>Info</p> <p>Note, this is for the Java executable, not the .jar file that Java is running.</p>"},{"location":"advanced/advanced_package_configurations/#auto-rename-configs","title":"Auto rename configs","text":"<p> Toggle |  adv-rename.json  auto_package_config_enabled</p> <p> Text box |  adv-rename.json  auto_package_config</p> <p>Danger</p> <p>This feature can pose a huge security risk and was only implemented to address certain packages. 99% of packages do not need this!</p> <p>Only use this if instructed by an active maintainer of APKognito to solve an issue, or if you trust the source of the script!</p> <p>Auto rename configs use explicit UNIX-like commands to manipulate the renaming process in ways that would be too overly complex to hard-code into APKognito. All commands are manually implemented wrappers for operations defined in C# (command bindings).</p> <p>More information on auto rename configs can be found in the auto config API guide.</p>"},{"location":"advanced/advanced_package_configurations/#buffers","title":"Buffers","text":""},{"location":"advanced/advanced_package_configurations/#smali-cutoff-limit","title":"Smali cutoff limit","text":"<p> Number selector |  adv-rename.json  smali_cutoff_limit</p> <p>The file size limit before a Smali file is streamed rather than fully loaded into memory, in KB. Defaults to <code>1024</code> (KB).</p>"},{"location":"advanced/advanced_package_configurations/#smali-buffer-size","title":"Smali buffer size.","text":"<p> Number selector |  adv-rename.json  smali_buffer_size</p> <p>The buffer size for all streamed Smali files, in KB. Defaults to 64 (KB).</p> <p>Note</p> <p>This only applies to files larger than the Smali cutoff limit.</p>"},{"location":"advanced/advanced_package_configurations/#scan-file-before-rename","title":"Scan file before rename","text":"<p> Toggle |  adv-rename.json  scan_smali_before_rename</p> <p>Scans each Smali file for an instance of the original package name. If one is not found, the file is skipped.</p>"},{"location":"advanced/auto_config_api/","title":"Auto config API","text":"<ul> <li> Config Syntax \u2013 Understand the syntax before learning the available commands</li> </ul>"},{"location":"advanced/auto_config_api/#file-additions","title":"File additions","text":""},{"location":"advanced/auto_config_api/#exclude","title":"Exclude","text":"<pre><code>exclude &lt;target&gt; [targets ...]\n</code></pre> <p>Excludes the given file from the respective stage.</p> Note <p>The behavior of this command is dependant on the stage it's used in. When used within the <code>assets</code> stage, it will exclude entries inside valid asset archive files, not the archive files themselves.</p> Example <pre><code>exclude \"/smali/com/somecompany/LoggerUtil/\" ; This will exclude the directory from being renamed.\n</code></pre>"},{"location":"advanced/auto_config_api/#include","title":"Include","text":"<pre><code>include &lt;target&gt; [targets ...]\n</code></pre> <p>Includes the given file in the respective stage.</p> Note <p>The behavior of this command is dependant on the stage it's used in. When used within the <code>assets</code> stage, it will include entries inside valid asset archive files, not the archive files themselves.</p> Example <pre><code>exclude \"/smali/com/somecompany/LoggerUtil/\" ; This will include the directory to be renamed.\n</code></pre>"},{"location":"advanced/auto_config_api/#file-commands","title":"File commands","text":""},{"location":"advanced/auto_config_api/#create-directory","title":"Create directory","text":"<pre><code>mkdir &lt;target&gt;\n</code></pre> <p>Creates the respective target directory. If the directory already exists, no action is taken.</p> Example <pre><code>mkdir \"/smali/newdir/\"\n</code></pre>"},{"location":"advanced/auto_config_api/#move-entry","title":"Move entry","text":"<pre><code>mv &lt;source&gt; &lt;target&gt;\n</code></pre> <p>Moves a file or directory to a new location, renaming it if specified.</p> Example <p>Moving a directory (recursive by nature).</p> <pre><code>mv '/assets/cool-image.svg' '/smali/com/coolsvile/lorax/cool-image.svg'\n</code></pre> <p>Moving a file.</p> <pre><code>mv '/assets/bin/Data/Managed/Metadata/global-metadata.dat' '/assets/global-metadata.dat'\n</code></pre>"},{"location":"advanced/auto_config_api/#copy-entry","title":"Copy entry","text":"<pre><code>cp &lt;source&gt; &lt;target&gt;\n</code></pre> <p>Copies a file or directory to a new location, renaming it if specified.</p> Example <p>Copying a directory (recursive by nature).</p> <pre><code>cp \"/assets/bin/Objects/\" \"/assets/bin/Managed/\"\n</code></pre> <p>Copying a file.</p> <pre><code>cp \"/assets/bin/Data/Managed/Metadata/global-metadata.dat\" \"/assets/global-metadata.dat\"\n</code></pre>"},{"location":"advanced/auto_config_api/#remove-entry","title":"Remove entry","text":"<pre><code>rm &lt;target&gt; [targets ...]\n</code></pre> <p>Removes a file or directory. This should be used sparingly.</p> Example <p>Removing files and directories (recursive by nature).</p> <pre><code>rm \"/assets/bin/\" \"/smali/com/something/Logger/\" \"/assets/images/activity-logo.svg\"\n</code></pre>"},{"location":"advanced/config_syntax/","title":"Auto config syntax","text":"<p>The auto config syntax was designed to be as simple as possible while maintaining a level of security for APKognito users. In this article, we go over the syntax and how the scripts you write are handled by APKognito.</p>"},{"location":"advanced/config_syntax/#understanding-auto-config-syntax","title":"Understanding auto config syntax","text":"<p>The auto config syntax uses explicit UNIX-like commands. This means that most commands use the same names as built-in Linux Bash commands and binaries.</p> <p>Some examples include <code>mv</code>, <code>cp</code>, <code>mkdir</code>, etc.</p>"},{"location":"advanced/config_syntax/#commands","title":"Commands","text":"<p>All commands are implemented as method bindings/wrappers for C# standard library methods (command bindings). To learn what commands are available, as well as their arguments and descriptions, visit the auto config API page.</p>"},{"location":"advanced/config_syntax/#arguments","title":"Arguments","text":"<p>Just like commands for any app that has ever implemented commands, you can (and usually are required to) give arguments to change what a command does and what it targets. For auto configs, however, arguments are limited to just string paths. This is due to a combination of factors, including laziness, but also because there aren't enough using this feature, let alone using APKognito.</p> <p>Argument paths must be in double or single quotes, and must originate from the root of the package directory to comply with package sandboxing.</p> Example <pre><code>cp '/assets/shrek.sh' \"/\" ; Copies... stuff to the package root directory\ncp 'assets/shrek.sh' \"/\"  ; Throws an error because\n</code></pre> <p>However, unlike regular OS utilities, auto config commands do not take positional flag arguments. This is likely to change in the future, but as of right now, the only supported argument type is an absolute path.</p>"},{"location":"advanced/config_syntax/#file-or-directory","title":"File or directory?","text":"<p>When using a command such as <code>mv</code> or <code>cp</code>, arguments may end with a slash to suggest the item is a directory. If no slash is present, then APKognito will check if a file exists with the given name, then check if a directory exists, and finally give an error stating no entry could be found.</p> <p>If an argument has a slash, APKognito will skip right to testing for a directory and will give an error if no directory is found.</p> Example <pre><code>mv\n</code></pre>"},{"location":"advanced/config_syntax/#comments","title":"Comments","text":"<p>Unlike most traditional programming languages, comments are denoted with a semicolon (<code>;</code>).</p> <p>C#</p> <pre><code>// Move the file\nSystem.IO.File.Move(\"/smali/something.smali\", \"/.\");\n</code></pre> <p>vs.</p> <p>Auto config</p> <pre><code>; move the file\nmv '/smali/something.smali' '/.'\n</code></pre>"},{"location":"advanced/config_syntax/#what-are-stages","title":"What are stages?","text":"<p>A document is set up in stages which are denoted with a <code>@</code> prefix.</p> <p>The supported stages are:</p> <ol> <li>Unpack: Runs right after the package is unpacked.</li> <li>Directory: Runs before directories are renamed.</li> <li>Library: Runs before libraries are renamed (even if the user has this option disabled).</li> <li>Smali: Runs before Smali files are renamed.</li> <li>Pack: Runs before the package is repacked.</li> <li>Assets: Runs before assets are copied/moved and renamed.<ul> <li>Note: This is only a stage. It does not allow you to modify or move the asset files. The <code>include</code> and <code>exclude</code> commands will only work on entries found within valid asset archives.</li> </ul> </li> </ol> <p>The stages will occur in the order they're listed in.</p> Abstract <p>The Assets stage used to run before the pack stage, meaning assets would be copied or moved and processed before finalizing the package. This wasn't a huge issue, but didn't make sense as assets are almost always the largest part of any game or app and would take the longest to process.</p> <p>Stages can be defined more than once and will be reorganized while parsing.</p> Example <pre><code>@pack\nmkdir \"/funny-memes/\"\n\n@smali\nexclude \"/smali/com/some_file.smali\"\n\n@unpack\nmv \"/legit/file\"\n\n@smali\nmv \"/smali/com/me/app.smali\" \"/.\"\n</code></pre> <p>This will be reorganized behind the scenes and effectively become:</p> <pre><code>@unpack\nmv \"/legit/file\"\n\n@smali\nexclude \"/smali/com/some_file.smali\"\nmv \"/smali/com/me/app.smali\" \"/.\"\n\n@pack\nmkdir \"/funny-memes/\"\n</code></pre>"},{"location":"advanced/config_syntax/#package-sandboxing","title":"Package sandboxing","text":"<p>Auto configs have been set up in a way to help with security. As such, there are some limitations on what auto configs can do.</p>"},{"location":"advanced/config_syntax/#path-arguments","title":"Path arguments","text":"<p>Paths that are passed as command arguments are not allowed to escape the package directory and must be formatted as absolute paths, assuming the package root is the same as a drive root.</p> <p>Example</p> <p>The following line will throw an <code>UnsafeExtraPathException</code> when used while renaming a package.</p> <pre><code>; The second argument attempts to escape the directory containing the package, so APKognito will halt execution and alert the user.\nmv \"/valid/path/entry\" \"../non-valid/path/entry\"\n</code></pre> <p>This also fails even if you hide a parent directory navigator inside the path.</p> <pre><code>mv \"/valid/path/entry\" \"/valid/../../entry\"\n</code></pre>"},{"location":"advanced/config_syntax/#control-characters-in-paths","title":"Control characters in paths","text":"<p>Paths cannot contain any control binary characters (i.e., <code>\\r</code>, <code>\\t</code>, <code>\\b</code>, <code>\\0</code>, etc). If any are found in any path arguments, an <code>UnsafeExtraPathException</code> will be thrown and the user will be alerted (and prompted with a cleaned string with all offending characters reformatted in hex).</p> <p>The exception to this is newline characters, which if present at any point in a line besides the end will slice the line in two, leading to a parsing error.</p>"},{"location":"getting_started/","title":"Getting Started with APKognito","text":"<p>If you haven't already, please make sure to download and install APKognito. You can find a quick guide in Installing APKognito.</p>"},{"location":"getting_started/#step-1-navigating-windows-smartscreen","title":"Step 1: Navigating Windows SmartScreenI HAVE HACKEKD YOUR PC \ud83d\udc7b!","text":"<p>When you first run APKognito, Windows will likely display a security warning. This is called Windows SmartScreen.</p> <p>About SmartScreen</p> <p>SmartScreen is a common warning for new Free and Open-Source Software (FOSS). If you don't trust the app, it's always best to follow your gut and do not run it. Your security is important!</p> <p>I make sure to attach a link to Virus Total with every release, so you can use that to assist your judgement.</p> <p> </p> The Windows SmartScreen warning. <p>After clicking <code>More info</code> and <code>Run anyway</code>, APKognito will launch...</p> <p>Just kidding!</p> <p> <p>...I'm kidding. (sorry)</p></p> <p>You should see a window that looks like this:</p> <p> </p> The APKognito main window."},{"location":"getting_started/#step-2-selecting-your-packages","title":"Step 2: Selecting Your Packages","text":"<p>To start, click the <code>Select APKs</code> button. This will open a File Explorer window. Navigate to and select the packages you want to rename.</p> <p> </p> A totally real example of selecting packages in File Explorer. <p>Batch Processing</p> <p>APKognito is able to rename more than one package at once. You can select multiple files to process them in a batch.</p>"},{"location":"getting_started/#step-3-configuring-and-starting-the-process","title":"Step 3: Configuring and Starting the Process","text":"<p>At this point, you can adjust any configurations to your liking, or simply proceed with the defaults.</p> <p>By default, your output package name will be <code>{prefix}.apkognito.{app name}</code>.</p> <p>Now, you're ready to start the renaming process. Click the <code>Start Renaming</code> button.</p> <p></p> <p>Tip</p> <p>Click the big green button that says \"Start Renaming\" to start the renaming process.</p> <p><sub>- A Frustrated Developer</sub></p>"},{"location":"getting_started/#step-4-viewing-the-output","title":"Step 4: Viewing the Output","text":"<p>All renamed packages are saved to the configured output directory, which defaults to <code>%APPDATA%\\APKognito\\output</code>.</p> <p>Clicking the <code>View Output</code> button will open File Explorer directly to this location.</p>"},{"location":"getting_started/#conclusion","title":"Conclusion","text":"<p>Congratulations! You have successfully used APKognito to rename your first package.</p> <ul> <li>To learn more, use the navigation menu on the left to explore other articles.</li> <li>Ready for more? Dive into advanced topics like advanced configuration.</li> </ul>"},{"location":"getting_started/installing/","title":"Installing APKognito","text":""},{"location":"getting_started/installing/#download-and-run","title":"Download and Run","text":"<p>The latest version of APKognito is always available on our GitHub Releases page.</p> <p>To install:</p> <ol> <li>Navigate to the latest release page.</li> <li>Download the ZIP file named <code>APKognito-{version}.zip</code>.      The ZIP file to download from the release assets. </li> <li>Extract the contents of the ZIP archive.</li> <li>Run the executable file inside.</li> </ol> <p>Once the app is running, follow our Getting Started guide to learn how to use APKognito for the first time.</p> Discord version command <p>You can get more information, as well as direct download links, by running the tag-command <code>+&lt;version&gt;</code> on the APKognito support Discord server.</p> <p>e.g., <code>+2.1.10</code></p> <p></p>"},{"location":"getting_started/installing/#understanding-version-types","title":"Understanding Version Types","text":"<p>APKognito uses specific prefixes to indicate the type of build you are using. This is important because APKognito will only update to builds of the same type.</p> <p>Version Prefixes</p> Prefix Type Description <code>v</code> Public Release The standard, stable version. Updates are automatic and frequent. (e.g., <code>v2.0.0</code>) <code>pd</code> Public Debug A build containing tools for diagnosing specific user issues. These are provided on a case-by-case basis and will eventually be rolled into a Public Release. <code>d</code> Debug A local build only obtainable by compiling the source code yourself. These builds never receive updates since the version is constant, and full debug builds are never uploaded. (e.g., <code>d1.0.0</code>) <p>Important Note</p> <p>If you are using a Public Debug build, you will not receive updates for Public Release versions, and vice versa. Your version type will only update to a newer build of the same type.</p> <p>For more technical details on versioning, you can view the source file on GitHub: <code>AssemblyInfo.Version.cs</code>.</p> <p> View Current Version File</p>"}]}